['eq', '==', 1, 1] ['plus', '+', 1, 7] ['or', '|', 1, 12] ['openpar', '(', 1, 17] ['semi', ';', 1, 22] ['if', 'if', 1, 27] ['public', 'public', 1, 34] ['read', 'read', 1, 44]
['noteq', '<>', 2, 1] ['minus', '-', 2, 7] ['and', '&', 2, 12] ['closepar', ')', 2, 17] ['comma', ',', 2, 22] ['then', 'then', 2, 27] ['private', 'private', 2, 35] ['write', 'write', 2, 46]
['lt', '<', 3, 1] ['mult', '*', 3, 6] ['not', '!', 3, 11] ['opencubr', '{', 3, 16] ['dot', '.', 3, 21] ['else', 'else', 3, 26] ['func', 'func', 3, 34] ['return', 'return', 3, 42]
['gt', '>', 4, 1] ['div', '/', 4, 6] ['closecubr', '}', 4, 15] ['colon', ':', 4, 20] ['integer', 'integer', 4, 25] ['var', 'var', 4, 36] ['self', 'self', 4, 43]
['leq', '<=', 5, 1] ['assign', '=', 5, 7] ['opensqbr', '[', 5, 16] ['float', 'float', 5, 24] ['struct', 'struct', 5, 33] ['inherits', 'inherits', 5, 43]
['geq', '>=', 6, 1] ['closesqbr', ']', 6, 15] ['arrow', '->', 6, 20] ['void', 'void', 6, 26] ['while', 'while', 6, 34] ['let', 'let', 6, 43]
['func', 'func', 7, 25] ['impl', 'impl', 7, 33]
['number', '0', 8, 1]
['number', '1', 14, 1]
['number', '10', 15, 1]
['number', '12', 16, 1]
['number', '123', 17, 1]
['number', '12345', 18, 1]
['float', '1.23', 19, 1]
['float', '12.34', 20, 1]
['float', '120.34e10', 21, 1]
['float', '12345.6789e-123', 22, 1]
['id', 'abc', 23, 1]
['id', 'abc1', 25, 1]
['id', 'a1bc', 27, 1] ['id', 'abc_1abc', 27, 1]
['id', 'abc1_abc', 28, 1]
['cmt', '// this is an inline comment', 29, 1]
['blockcmt', '/* this is a single line block comment */', 31, 1]
['blockcmt', '/* this is a \nmultiple line\nblock comment \n*/', 32, 1]
['blockcmt', '/* this is an imbricated \n/*/ block comment\n*/*\n*/', 37, 1]
